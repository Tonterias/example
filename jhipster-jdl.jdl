

application {
  config {
    applicationType monolith,
    baseName example,
    packageName com.example.web,
//    authenticationType jwt,
    authenticationType session,
//    prodDatabaseType postgresql,
    prodDatabaseType mysql,
    devDatabaseType h2Disk,
//    buildTool maven,
    buildTool gradle,
//    testFrameworks [cypress],
    clientFramework angular,
    enableTranslation true,
    nativeLanguage en,
    languages [en, es]
  }
  entities Appuser, Notification
}

// JDL definition for application 'Example' generated with command 'jhipster export-jdl' 
// jhipster jdl jhipster-jdl.jdl

entity Appuser {
    date Instant required
    plateNumber String required
    firstName String
    lastName String
    email String
}

entity Notification {
    date Instant
    message Message required
    status Status
}

// ENUMS:
enum Status {
    INMACULATE, INCOURSE, NOTIFIED, OTHER
}

enum Message {
    MESSAGE1, MESSAGE2, MESSAGE3, MESSAGE4, MESSAGE5
}


// RELATIONSHIPS:
relationship OneToOne {
    Appuser{user(id) required} to User{appuser(id)}
}
relationship ManyToOne {
    Notification{appuser(plateNumber) required} to Appuser{Notification }
}

// SET PAGINATION OPTIONS:
paginate all with pagination
// paginate ChatMessage with infinite-scroll
// paginate all with infinite-scroll

// SET SERVICE OPTIONS:
service all with serviceImpl
//service all with serviceClass

// DTO:
dto all with mapstruct

// FILTERING:
filter *
